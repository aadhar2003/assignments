/**
  You need to create an express HTTP server in Node.js which will handle the logic of a todo list app.
  - Don't use any database, just store all the data in an array to store the todo list data (in-memory)
  - Hard todo: Try to save responses in files, so that even if u exit the app and run it again, the data remains (similar to databases)

  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  The expected API endpoints are defined below,
  1.GET /todos - Retrieve all todo items
    Description: Returns a list of all todo items.
    Response: 200 OK with an array of todo items in JSON format.
    Example: GET http://localhost:3000/todos
    
  2.GET /todos/:id - Retrieve a specific todo item by ID
    Description: Returns a specific todo item identified by its ID.
    Response: 200 OK with the todo item in JSON format if found, or 404 Not Found if not found.
    Example: GET http://localhost:3000/todos/123
    
  3. POST /todos - Create a new todo item
    Description: Creates a new todo item.
    Request Body: JSON object representing the todo item.
    Response: 201 Created with the ID of the created todo item in JSON format. eg: {id: 1}
    Example: POST http://localhost:3000/todos
    Request Body: { "title": "Buy groceries", "completed": false, description: "I should buy groceries" }
    
  4. PUT /todos/:id - Update an existing todo item by ID
    Description: Updates an existing todo item identified by its ID.
    Request Body: JSON object representing the updated todo item.
    Response: 200 OK if the todo item was found and updated, or 404 Not Found if not found.
    Example: PUT http://localhost:3000/todos/123
    Request Body: { "title": "Buy groceries", "completed": true }
    
  5. DELETE /todos/:id - Delete a todo item by ID
    Description: Deletes a todo item identified by its ID.
    Response: 200 OK if the todo item was found and deleted, or 404 Not Found if not found.
    Example: DELETE http://localhost:3000/todos/123

    - For any other route not defined in the server return 404

  Testing the server - run `npm run test-todoServer` command in terminal
 */
const express = require("express");
const bodyParser = require("body-parser");
const Port = 4000;
const app = express();
const fs = require("fs");

app.use(bodyParser.json());

//create todos
app.post("/todos", (req, res) => {
  try {
    const raw = fs.readFileSync("todos.json");
    const exist = JSON.parse(raw);
    const data = req.body;
    exist.push(data);
    fs.writeFileSync("todos.json", JSON.stringify(exist));
    res.status(200).send("data added successfully");
  } catch (err) {
    res.status(401);
    console.log(err);
  }
});
app.get("/get-all", (req, res) => {
  try {
    const raw = fs.readFileSync("todos.json");
    const exist = JSON.parse(raw);

    res.status(200).send(exist);
  } catch (err) {
    res.status(500).console.log(`${err}`);
  }
});
app.get("/get/:id", (req, res) => {
  try {
    const { id } = req.params;
    const raw = fs.readFileSync("todos.json");
    const exist = JSON.parse(raw);
    for (let i = 0; i < exist.length; i++) {
      if (id === exist[i].id) {
        res.status(200).send(exist[i]);
      }
    }
    res.status(404).send("Not Found");
  } catch (err) {
    res.status(500).send(err);
  }
});
app.put("/edit/:id", (req, res) => {
  try {
    const { id } = req.params;
    const {title,description}=req.body;
    const raw = fs.readFileSync("todos.json");
    const exist = JSON.parse(raw);
    for (let i = 0; i < exist.length; i++) {
      if (id === exist[i].id) {
        if(title){
          exist[i].title=title;
        }
        if(description){
          exist[i].description=description;
        }
        fs.writeFileSync("todos.json", JSON.stringify(exist));
        res.status(200).send(exist[i]);
        return;
      }
    }
    res.status(404).send("Not Found");
  } catch (err) {
    res.status(500).send(err);
  }
});
app.delete("/delete/:id", (req, res) => {
  try {
    const { id } = req.params;
    const raw = fs.readFileSync("todos.json");
    const exist = JSON.parse(raw);
    for (let i = 0; i < exist.length; i++) {
      if (id === exist[i].id) {
        exist.splice(i, 1);
        fs.writeFileSync("todos.json", JSON.stringify(exist));
        res.status(200).send("deleted successfully");
        return;
      }
    }
    res.status(404).send("Not Found");
  } catch (err) {
    res.status(500).send(err);
  }
});

app.listen(Port, () => {
  console.log(`Server is running on port ${Port}`);
});

module.exports = app;
